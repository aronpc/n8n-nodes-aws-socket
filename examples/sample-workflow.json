{
  "name": "AWS WebSocket Example",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 5
            }
          ]
        }
      },
      "id": "1",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "// This is a sample code to generate test data\nreturn [\n  {\n    json: {\n      connectionId: \"AbCdEfGhIjK=\",  // Replace with actual connection ID\n      message: JSON.stringify({\n        type: \"notification\",\n        content: \"This is a test message\",\n        timestamp: new Date().toISOString()\n      })\n    }\n  }\n];"
      },
      "id": "2",
      "name": "Prepare Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        450,
        300
      ]
    },
    {
      "parameters": {
        "operation": "sendMessage",
        "connectionId": "={{ $json.connectionId }}",
        "message": "={{ $json.message }}"
      },
      "id": "3",
      "name": "AWS WebSocket",
      "type": "n8n-nodes-websocket-aws.awsWebSocket",
      "typeVersion": 1,
      "position": [
        650,
        300
      ],
      "credentials": {
        "awsWebSocketApi": {
          "id": "1",
          "name": "AWS WebSocket API"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.success }}",
              "value2": true
            }
          ]
        }
      },
      "id": "4",
      "name": "Success?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        850,
        300
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://hooks.slack.com/services/YOUR_SLACK_WEBHOOK",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "=WebSocket message sent successfully to {{ $json.connectionId }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5",
      "name": "Success Notification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1050,
        200
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://hooks.slack.com/services/YOUR_SLACK_WEBHOOK",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "=Error sending WebSocket message: {{ $json.error }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6",
      "name": "Error Notification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1050,
        400
      ]
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Prepare Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Data": {
      "main": [
        [
          {
            "node": "AWS WebSocket",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AWS WebSocket": {
      "main": [
        [
          {
            "node": "Success?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Success?": {
      "main": [
        [
          {
            "node": "Success Notification",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}
